#+TITLE: Evil Multiple Cursors

* Spec
** Text selection
- should work-test with regex
- should work-test with selected text
- should work-test with the word at point
- should be able to add matches
- should be able to skip matches
- should be able to remove matches
- should be able to add all matches
- want a combination of visualstar and word/symbol only
- should be able to create/remove a cursor to/from anywhere
  - would need a cursor creation mode to avoid moving all fake cursors as the real one is moving
- should be able to select just a letter 
** Visual
- allow extended visual motions such as vib, vab, etc
** Movement
- normal cursor movements (up/down/left/right)
- evil motions
- should be able to cycle cursors
- gg should go to the first cursor
- G should go to the last cursor
- should be able to freeze the fake cursors temporarily
- should be able to align all cursors at 
  - start of line
  - end of line
  - current column
  - original word
- going back to a previous line should return the cursor to it's old location
** Editing
- should work with any operator
- should work in insert mode
- should work with other plugins such as exchange, surround, smartchr, etc
- add hooks for commands, so that for every command/keys pair users can specify a lambda to be run for each fake cursor when the real cursor executes the above command
  - same as a key map but for commands
- maybe we should have a ring of commands, similar to evil-repeat-ring to allow for executing prior commands
- for text yank each cursor should keep track of the last yanked text by that cursor and use it when pasting
- make it work with the following plugins
  - evil-surround
  - evil-snipe
  - evil-exchange
- copy/paste should work properly including with text objects and evil plugins
** Status
- the number of matches
- the number of current cursors
- it should be visibly clear when the multiple cursor mode is engaged
  - having multiple cursors around without being aware of it could lead to significant loss of work
* Implementation
** Re-implement the current multiple-cursors in terms of evil's abstractions
- motions
- operators
** Steps
*** for search support only selected pattern (a la visualstar) to start
*** create fake cursors based on the current selection or regex
- the visual selection should be on for each fake cursor
- if nothing is selected add each new cursor on the same column (below or above)
- how do we accomplish this with evil abstractions
  - the search can be done as in evil-visualstar
*** in motion after hooks simulate the current motion for all fake cursors
*** in operator after hook run the last operator command for all fake cursors
*** in the exit insert mode hook, repeat the last command (same as dot) for all the fake cursors

**** see ~evil-repeat~ 
*** finish implementing the visual selection behavior
- going between visual line and visual
*** implement paste over a visual selection
- should overwrite the selected text
- the overwritten text should be added to the kill ring
** Store the number of cursors in a variable, see ~mc/num-cursors~
** Need a place to store state for each cursor
** Debugging
- need to be able to log the current command running for each cursor including input, output, errors, etc
- should be able to set the level in configuration as well as interactively
** Abstractions
*** cursor list
- align
- execute command
- remove (all)
- count
*** cursor
- has a unique id
- contains state
- can move itself
- can re size itself
- cursor (fake or real)
- a cursors should have state 
  - determine the vars that need to be tracked per cursor, see ~mc/cursor-specific-vars~
- make-cursor
- make-active-region
- cursor-execute command/motion
- mark-next-match
  - direction: forward, backward
  - match type: word, symbol, everything
  - skip?
*** cursor data
- main overlay
- region overlay
- yanked text (stored in a kill-ring per cursor)
- the current kill ring pointer (kill-ring-yank-pointer)
- what is the best data structure for a cursor
- may be easiest to save all this in the overlay
** Conflicts and workarounds
- evil-escape causes evil-find-char to stop working and self-insert-command with "f" to result in an infinite loop
  - this is due to remapping "fd" to escape from insert
- there is some interference with yasnippet
  - see yas--on-field-overlay-modification
    - wrong type argument: overlayp, nil
- disabling or never enabling evil-snipe breaks motion commands
  - this-command-keys don't contain "t" in commands such as "dtk" or "ctk"
- insert does not seem to work in org mode (org-self-insert-command)
** Operator commands need to be done using evil-operator-range to get the beginning and end positions
* Issues
** TODO make yank/paste work with the spacemacs micro paste mode
*** pressing p multiple times cycles the kill-ring
** DONE when a match is at the end of a line that cursor behaves differently than the rest of the cursors
CLOSED: [2015-08-29 Sat 12:10]
*** undo cursor does not remove the fake cursor
*** changing text starts typing in the wrong position (relative to other cursors that are not at the end of a line)
** DONE fix change with visual region of type line
CLOSED: [2015-08-29 Sat 14:32]
*** the fake cursors loose their positions
*** or determine what the correct behavior is
** TODO fix move text up/down or throw a not supported error
** TODO fix motions with a number
*** motions such as 4j, 4k, etc should work properly
*** what about H L M motions?
** TODO fix transpose-chars-before-point at the end of line
*** at the end of line it causes the fake cursors to go to the next line
* Preparation
** TODO Understand the implementation of emacs multiple-cursors
** TODO Get familiar with the abstractions of evil mode
* Related
- https://github.com/magnars/multiple-cursors.el/issues/17
- https://github.com/magnars/multiple-cursors.el
- https://github.com/terryma/vim-multiple-cursors
- http://www.sublimetext.com/docs/3/multiple_selection_with_the_keyboard.html
* Questions
** How do we draw each cursor
- should respect the color and shape of the original cursor (based on evil state)
** How do we get the visual selection in evil
** Where do we store all cursors
- store the cursors in a list (similar to evil"s ~evil-ex-active-highlights-alist~)
- define some abstractions over the cursors list
- a lot of state can be stored into the cursor overlays
- overlays can be removed and re-added to the buffer 
** How do we find all places that need to have a fake cursor
- see evil-visualstar
** How does the emacs multiple cursors work
- it creates a set of fake cursors (and regions) based on the current selection
  - see ~mc/cursor-face~ and ~mc/region-face~
- how does it create a fake cursor (and active region)
** How do we deal with copy/paste
** How do we deal with new lines
** How do I set up the environment for developing the plugin
- unit tests
- messages/debug
- install
- reload on changes
** What happens to the cursors that are off screen
* Development
** DONE Implement only prev and next based on the visual selection
CLOSED: [2015-08-29 Sat 17:36]
- draw the cursors
- second escape should remove all fake cursors
- should be able to add a cursor for next match or show a warning message
- should be able to add a cursor for prev match or show a warning message
- should be able to add a cursor for all matches or show a warning message
- add tests
*** Behavior
**** pressing (create-next-cursor/create-prev-cursor) the first time
- output error if there is no visual selection
- output error if the visual selection is not of a supported type (inline)
- store the selected pattern
- create fake cursor at point (end of visual selection)
- store state for the current fake cursor
- remove the visual selection
- move cursor to the pattern match (end of it)
**** pressing (create-next-cursor/create-prev-cursor) subsequent times
- output error if there are no more matches or if the next match is a fake cursor
- create the next fake cursor at point
- store state for the current fake cursor
- move cursor to the next pattern match (wrap)
** DONE Implement motions for the fake and real cursors
CLOSED: [2015-08-29 Sat 17:36]
- all evil motions should work for all cursors
- other motions that are built using evil abstractions should work such as %, etc
- after exiting insert the cursor moves to the left one char: need to do the same for all fake cursors
- add tests
** DONE Implement operators
CLOSED: [2015-08-29 Sat 17:36]
- all built in operators should work
- all operators implemented using evil abstractions should work
- add tests
** DONE Keep the visual selection and ensure that making a visual selection works for all cursors
CLOSED: [2015-08-29 Sat 17:36]
- start out in normal mode
- draw the visual selection for each cursor
- add tests
** DONE Implement cursor creation 
CLOSED: [2015-09-09 Wed 19:43]
*** DONE create all cursors matching the word/WORD/symbol at cursor
CLOSED: [2015-09-09 Wed 19:42]
*** DONE next should wrap
CLOSED: [2015-09-09 Wed 19:42]
*** DONE skip
CLOSED: [2015-09-09 Wed 19:42]
*** DONE undo a cursor
CLOSED: [2015-08-29 Sat 17:56]
*** DONE create a cursor at point even if it doesn't match the current pattern
CLOSED: [2015-09-09 Wed 19:42]
*** DONE delete the cursor at point
CLOSED: [2015-09-09 Wed 19:42]
*** DONE navigate through cursors
CLOSED: [2015-09-09 Wed 19:42]
*** DONE create/delete at point, as well as navigating through cursors will require a way to freeze the cursors temporarily
CLOSED: [2015-09-09 Wed 19:42]
** DONE Handle the insert mode
CLOSED: [2015-08-29 Sat 17:37]
- all operations performed in insert state should happen for all cursors
** DONE Implement paste/copy from/to registers
CLOSED: [2015-09-14 Mon 21:01]
** DONE Determine why some keys are lost
CLOSED: [2015-09-14 Mon 21:07]
*** for example the command "csbB" results in "csB"
*** use before advice for evil-repeat recording commands
- evil-repeat-keystrokes, etc
*** ensure the post-command-hook is appended rather than inserted at the front
** DONE Fix evil-complete-next
CLOSED: [2015-09-14 Mon 21:07]
*** currently it only works the first time
*** should cycle through completions
** DONE Fix motions
CLOSED: [2015-09-14 Mon 21:25]
*** when there multiple cursors on the same line the jk motions causes some cursors to collapse at the same location on that line
** DONE Add before-cursors-creation/after-cursors-deletion hooks
CLOSED: [2015-09-14 Mon 21:30]
*** as a place to enable/disable modes that are incompatible with emc
** TODO Fix cursor faces 
*** should be able to customize faces per evil state
** TODO Implement undo/redo for fake cursors
*** should work with undo-tree as well as Emacs undo
*** after undo position the cursors in the proper places
*** DONE fix undo after a paste
CLOSED: [2015-09-14 Mon 21:12]
**** currently a second undo is necessary for the real cursor
*** TODO fix cursor positions after undo
**** after undo of certain actions the cursors end up in the wrong position
- after cc for example
** TODO Use all vars through methods rather than directly
*** clean up the cursor state methods
*** need a better way to access cursor properties
** TODO Determine how paste of a non line over a visual line should work
*** all fake cursors and the real one should behave the same
*** maybe file a bug report for evil to make this behave as in vim (there should be a newline after the pasted text)
** TODO Improve performance
*** slow commands for 10+ cursors
- change "cw"
- evil snipe "f-"
- execute-kbd-macro seems to cause the slowness
*** a workaround for this is to narrow to region or function
** TODO Fix evil-repeat
*** currently only works for some commands
*** for self-insert-command and similar we need to tell evil-repeat to stop recording
- currently it records the changes made at all cursors
- how can we make evil-repeat work for cursor
** TODO Fix smartchr commands
** TODO Fix yasnippet commands
*** something in pre-command-hook causes an error
** TODO Fix insertion js2 mode 
*** when in an error state some characters are recorded twice
** TODO prevent the cursors from losing state when navigating through them
*** all cursors navigation (next/prev) causes cursors to lose state as it re-creates them
*** all undo position, markers, etc are lost
*** maybe create a cursor for the real one as well and mark it as non executable but keep it in up to date
** TODO Fix move text up/down
*** currently it only works if the cursors are not on consecutive lines
** TODO Implement debug messages & levels
** TODO Implement cursors status
*** number of cursors
** TODO Refactor command run functions
*** extract to own file
** TODO Test with various modes (org, js2, ruby, etc)
